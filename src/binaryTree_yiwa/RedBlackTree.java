package binaryTree_yiwa;


/**
 * https://blog.csdn.net/tanrui519521/article/details/80980135
 * 每个节点必须着色成红色或者黑色
 * 根节点是黑色的
 * 空节点是黑色的
 * 父子节点之间不能出现两个连续的红色节点
 * 每个节点到其后代叶子节点的所有路径上均包含相同数目的黑色
 * 节点(一个节点出发的所有路径的黑高相同)
 *
 * 通过这样的限制，红黑树可以实现没有一条路径会比最短路径长出两倍
 * 相比AVL树来说平衡要求较低，这种低要求换来的是更高效的调整操作，
 * 红黑树可能仅需要进行局部的调整，而AVL树必须要回溯到根节点进行信息更新，
 * 这是红黑树的优势，并且红黑树的统计效率比AVL树好
 */

public class RedBlackTree {

}
